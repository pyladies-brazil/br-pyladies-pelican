daemon off;
# stay attached to the dyno process, run in Procfile / web

pid /app/nginx.pid;
# /app is $HOME & working directory of Heroku dyno

error_log stderr info;
# As documented for Nginx, but we still see error during start-up in log:
# >  nginx: [alert] could not open error log file: open() "./logs/error.log"

worker_processes <%= ENV['NGINX_WORKERS'] || 4 %>;
# Heroku dynos have at least 4 cores.

events {
	use epoll;
	accept_mutex on;
	worker_connections <%= ENV['NGINX_WORKER_CONNECTIONS'] || 1024 %>;
}

http {
  gzip on;
  gzip_comp_level 2;
  gzip_min_length 512;
  gzip_proxied any; # Heroku router sends Via header

  server_tokens off;

  log_format l2met 'measure#nginx.service=$request_time request_id=$http_x_request_id';
  access_log /dev/stdout l2met;
  # Remote IP, request path, HTTP status, & timestamp are all logged by Heroku Router, so not useful to include here.

  include mime.types;
  default_type application/octet-stream;
  sendfile on;

  # Must read the body in 5 seconds.
  <% if ENV["PELICAN_SITEURL"] %>
    server {
      listen <%= ENV["PORT"] %>;
      rewrite ^(.*) <%= ENV["PELICAN_SITEURL"] %>$1 permanent;
    }
  <% end %>

  server {
    listen <%= ENV["PORT"] %>;
    port_in_redirect off;
    root /app/public;
  <% if ENV["PELICAN_SITEURL"] %>
    server_name <%= require 'uri'; URI.parse(ENV["PELICAN_SITEURL"]).host %>;
  <% end %>

    location / {
      expires 10s;
    }
  }
}
